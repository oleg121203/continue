#!/bin/bash
set -e  # –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏ –ø–µ—Ä—à—ñ–π –ø–æ–º–∏–ª—Ü—ñ
set -u  # –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –Ω–µ–∑–∞–¥–µ–∫–ª–∞—Ä–æ–≤–∞–Ω–∞ –∑–º—ñ–Ω–Ω–∞
set -o pipefail  # –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫—â–æ –±—É–¥—å-—è–∫–∞ –∫–æ–º–∞–Ω–¥–∞ –≤ –ø–∞–π–ø—ñ –∑–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è –∑ –ø–æ–º–∏–ª–∫–æ—é

# Set up Git configuration
git config --global user.email "oleg1203@gmail.com"
git config --global user.name "Oleg Kizyma"

# Setup pre-commit
export PRE_COMMIT_HOME=/workspaces/CODE/.cache/pre-commit
mkdir -p $PRE_COMMIT_HOME
chmod -R 777 $PRE_COMMIT_HOME
pre-commit install

# Make script executable
chmod +x "${0}"

echo "–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é..."
git init

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
echo "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
python -m venv /workspaces/CODE/venv
if [ -d "/workspaces/CODE/venv" ]; then
    echo "–í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ."
else
    echo "–ü–æ–º–∏–ª–∫–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ!"
    exit 1
fi

echo "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞:"
ls -la /workspaces/CODE

# –î–æ–¥–∞–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è PS1
check_environment() {
    echo "=== –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ ==="
    echo "–ü–æ—Ç–æ—á–Ω–∞ –æ–±–æ–ª–æ–Ω–∫–∞: ${SHELL:-–Ω–µ–≤—ñ–¥–æ–º–æ}"
    echo "VIRTUAL_ENV: ${VIRTUAL_ENV:-–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
    echo "PWD: ${PWD:-–Ω–µ–≤—ñ–¥–æ–º–æ}"
    echo "USER: ${USER:-$(whoami)}"  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ whoami —è–∫ –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
    echo "PATH: ${PATH:-–Ω–µ–≤—ñ–¥–æ–º–æ}"

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è PS1 –¥–ª—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    # –ö–æ–ª—å–æ—Ä–∏ —Ç–∞ —ñ–∫–æ–Ω–∫–∏
    RED="\[\e[31m\]"
    GREEN="\[\e[32m\]"
    YELLOW="\[\e[33m\]"
    BLUE="\[\e[34m\]"
    MAGENTA="\[\e[35m\]"
    CYAN="\[\e[36m\]"
    RESET="\[\e[0m\]"
    VENV_ICON="üêç"
    GIT_ICON="‚éá"

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è Git –±—Ä–∞–Ω—á—É
    git_branch() {
        git branch 2>/dev/null | grep "^*" | sed "s/^* //"
    }

    # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    venv_info() {
        [[ -n "$VIRTUAL_ENV" ]] && echo "(${VIRTUAL_ENV##*/}) "
    }

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è PS1
    PS1="\n\$(venv_info)${CYAN}\w${RESET} \$(git_branch && echo \"${YELLOW}${GIT_ICON} \$(git_branch)${RESET}\") \n${MAGENTA}${VENV_ICON}${RESET} \$ "
}

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ USER —è–∫—â–æ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ
: "${USER:=$(whoami)}"
export USER

source /workspaces/CODE/venv/bin/activate

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
if [ -z "$VIRTUAL_ENV" ]; then
    echo "–ü–æ–º–∏–ª–∫–∞: –í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –Ω–µ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!"
    exit 1
else
    echo "–í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ: $VIRTUAL_ENV"
    # –î–æ–¥–∞—î–º–æ ASCII –∞—Ä—Ç
    cat << "EOF"
     _  __ _       _
    | |/ /(_)____ (_)_ __ ___   __ _
    | ' /| |_  / | | '_ \` _ \ / _\` |
    |  < | |/ /  | | | | | | | (_| |
    |_|\_\_/___|_|_|_| |_| |_|\__,_|

      ____  _     ____  _   _
     / __ \| |   |  __|| | | |
    | |  | | |   | |_  | |_| |
    | |  | | |   |  _| |  _  |
    | |__| | |___| |___| | | |
     \____/|_____|_____|_| |_|

EOF

    echo "–í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –≥–æ—Ç–æ–≤–µ –¥–æ —Ä–æ–±–æ—Ç–∏!"
fi

check_environment

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è pip —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
echo "–û–Ω–æ–≤–ª–µ–Ω–Ω—è pip —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
pip install --no-cache-dir --upgrade pip

if [ -f /workspaces/CODE/requirements.txt ]; then
    pip install --no-cache-dir -r /workspaces/CODE/requirements.txt
else
    echo "–§–∞–π–ª requirements.txt –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π."
fi

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ selenium
pip install selenium

echo "–í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ."

echo "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Python-–∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
if [ -f requirements.txt ]; then
    pip install --no-cache-dir -r requirements.txt
else
    echo "–§–∞–π–ª requirements.txt –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Python-–∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π."
fi

# –ò–∑–º–µ–Ω—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É pre-commit —Ö—É–∫—ñ–≤
echo "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è pre-commit —Ö—É–∫—ñ–≤..."
if ! pre-commit install --install-hooks; then
    echo "–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è: –í–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ pre-commit —Ö—É–∫—ñ–≤"
    echo "–ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è..."
fi

echo "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó ~/.continue/lance..."
mkdir -p ~/.continue/lance

# Initialize NVM and Node.js
export NVM_DIR="/usr/local/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Add NVM initialization to shell rc files
echo 'export NVM_DIR="/usr/local/nvm"' >> ~/.zshrc
echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> ~/.zshrc
echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"' >> ~/.zshrc

echo 'export NVM_DIR="/usr/local/nvm"' >> ~/.bashrc
echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> ~/.bashrc
echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"' >> ~/.bashrc

# Verify Node.js installation
if ! command -v node >/dev/null 2>&1; then
    echo "Node.js –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ..."
    nvm install node
    nvm use node
fi

echo "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è npm-–∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
if command -v npm >/dev/null 2>&1; then
    npm install --save-dev @types/vscode @types/node @vscode/test-electron
else
    echo "–ü–æ–º–∏–ª–∫–∞: npm –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø—ñ—Å–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Node.js"
    exit 1
fi

echo "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è SSH –∫–ª—é—á—ñ–≤..."
mkdir -p ~/.ssh_keys
cp -R ~/.ssh/* ~/.ssh_keys/
chmod 600 ~/.ssh_keys/id_rsa
chmod 644 ~/.ssh_keys/id_rsa.pub
eval "$(ssh-agent -s)"
ssh-add ~/.ssh_keys/id_rsa

echo "–í—Å—ñ –∫–æ–º–∞–Ω–¥–∏ –≤–∏–∫–æ–Ω–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ!"